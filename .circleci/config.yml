version: 2
jobs:
  php_test:
    docker:
      - image: tenkoma/php:7.1-apache-sample
        environment:
          DEBUG: true
          DATABASE_URL: "mysql://root:password@127.0.0.1/cisample?encoding=utf8mb4&timezone=UTC&cacheMetadata=true"
          DATABASE_TEST_URL: "mysql://root:password@127.0.0.1/cisample?encoding=utf8mb4&timezone=UTC&cacheMetadata=true"
      - image: circleci/mysql:8.0
        command: mysqld  --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_DATABASE: cisample
          MYSQL_ROOT_PASSWORD: password
    working_directory: /var/www/html
    steps:
      - restore_cache:
          key: cakephp3-circleci-example-{{ .Branch }}
      - checkout
      - run: composer install --dev --no-interaction
      - save_cache:
          key: cakephp3-circleci-example-{{ .Branch }}
          paths:
            - "/home/ubuntu/.composer/cache"
      - run:
          name: create test repot dir
          command: mkdir -p $CIRCLE_TEST_REPORTS/phpunit
      - run:
          name: Wait for MySQL DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Initialize Database
          command: bin/cake migrations migrate
      - run: vendor/bin/phpunit --configuration phpunit.xml.dist --log-junit $CIRCLE_TEST_REPORTS/phpunit/junit.xml
  php_code_sniffer:
    docker:
      - image: tenkoma/php:7.1-apache-sample
        environment:
          DEBUG: true
    working_directory: /var/www/html
    steps:
      - restore_cache:
          key: cakephp3-circleci-example-{{ .Branch }}
      - checkout
      - run: composer install --dev --no-interaction
      - save_cache:
          key: cakephp3-circleci-example-{{ .Branch }}
          paths:
            - "/home/ubuntu/.composer/cache"
      - run:
          name: php code sniffer
          command: vendor/bin/phpcs --colors -p --encoding=utf-8 --extensions=php --standard=phpcs.xml.dist ./src ./tests

workflows:
  version: 2
  build-all:
    jobs:
      - php_test
      - php_code_sniffer
